<!-- include the jquery miniColor lib -->
<%= javascript_include_tag "jquery.miniColors.js" %>
<%= stylesheet_link_tag "jquery.miniColors.css" %>

<% @title = "Editing: #{@thread.thread_display_name.capitalize} - PageOneX" %>

<%= form_for @thread, :url=> { :controller => :threads, :action => :update}, :html => { :class => "form-horizontal" }, method: "PUT" do |f|  %>
<div id="errors">
  <% if @thread.errors.any? %>
    <div class="alert alert-error">
      <% @thread.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
        <% end %>
            <li id="date_message" style="display:none">End date must be greater than start date</li>
            <li id="media_message" style="display:none">You must at least select one newspaper</li>
            <li id="topic_name_message" style="display:none">Topic name cannot be empty</li>
            <li id="topic_color_message" style="display:none">Topic color cannot be empty</li>
    </div>
    <% end %>
</div>
  <div class="control-group">
  <%= f.label :thread_display_name, "Thread Name", :class => "control-label" %>
    <div class="controls">
    <%= f.text_field :thread_display_name %>
    </div>
  </div>
  <div class="control-group">
  <%= f.label :thread_name, "URL-Safe Name (slug)", :class => "control-label" %>
    <div class="controls">
    <%= f.text_field :thread_name, :rel=>"popover", 'data-content'=>"This will be used to create the URL this Thread. If you include any letters or symbols that don't work in URLs, we will automatically substitute them. This field will generate: pageonex.com/your_thread_name from 'Your Thread Name'" %>
    </div>
  </div>
<!--
  <div class="control-group">
  <%= f.label :status, :class => "control-label"  %>
    <div class="controls">
    <% if @thread.status  == "closed" %>
      <div class="btn-group control-group" data-toggle="buttons-radio">
        <a id="open_thread" class="btn btn-primary status" rel="popover"  data-content="In case of selecting this option, PageOneX will update with the latest newspapers front pages automatically" data-original-title="Opened Thread" >Opened</a>
        <a id="close_thread" class="btn btn-inverse active status" rel="popover"  data-content="In case of selecting this option, PageOneX will create a thread with fixed dates" data-original-title="Closed Thread" >Closed</a>
      </div>
    <% else %>
      <div class="btn-group" data-toggle="buttons-radio">
        <a id="open_thread" class="btn btn-primary status active" rel="popover"  data-content="In case of selecting this option, PageOneX will update with the latest newspapers front pages automatically" data-original-title="Opened Thread" >Opened</a>
        <a id="close_thread" class="btn btn-inverse  status" rel="popover"  data-content="In case of selecting this option, PageOneX will create a thread with fixed dates" data-original-title="Closed Thread" >Closed</a>
      </div>
    <% end %>
    </div>
  </div>
  <br>
-->
  <%= hidden_field_tag :status, @thread.status %>
  <div class="control-group">
  <%= f.label :start_date, :class => "control-label" %>
    <div class="controls">
    <%= f.text_field :start_date, :class => "datepicker"%>
    </div>
  </div>

  <div class="control-group">
  <% if @thread.status  == "closed" %>
    <%= f.label :end_date, :class => "control-label" %>
    <div class="controls">
    <%= f.text_field :end_date , :class => "datepicker"%>
    </div>
  <% else %>
    <%= f.label :end_date, :style=>"display:none", :class => "control-label" %>
    <div class="controls">
    <%= f.text_field :end_date , :class => "datepicker" , :style=>"display:none"%>
    </div>
  <% end %>
  </div>

  <div class="control-group">
  <%= f.label :category, :class => "control-label"  %>
    <div class="controls">
      <%= f.text_field :category, :rel=>"popover", 'data-content'=>"Separate the different categories by commas. Ex: social, politics, Brazil" %>
    </div>
  </div>

  <div class="control-group">
  <%= f.label :description, :class => "control-label"  %>
    <div class="controls">
      <%= f.text_area :description, :rows => "10", :rel=>"popover", 'data-content'=>"Allowed HTML tags: <a href=''> <strong>..." %>
    </div>
  </div>

  <div id="media_box" class="control-group">
    <%= label_tag :media, "Select newspapers", :id => "media_label1", :class => "control-label"  %>
    <div class="controls">
    <%= select_tag :media, options_from_collection_for_select(@media, "id", "name_with_country"),  :multiple => true , "rel" => "popover", "data-content"  => "To select multiple newspapers: Hold Ctrl + select the newspaper, release the Ctrl with scrolling and hold it again before any other selection. Start with 2-4 newspapers, you can always edit this and add more", "data-original-title" => "Select Multiple Newspapers", style: "height: 300px;width: 300px;", :class=>"js_validate" %>
    </div>
  </div>

    <%= hidden_field_tag :org_media, params["media"] %>

  <a name="collaborators"></a>
  <h3>Collaborators</h3>
  <div class="control-group">
    <input type="text" id="collaborator-input" autocomplete="off"/>
    <button type="button" class="btn" id="collaborator-add">Add</button>
    <ul id="collab-list" class="unstyled">
    </ul>
    <div id="collab-inputs"></div>
  </div>

  <h3>Coding information</h3>
  <p>Create one or multiple categories you want to use in the analysis.</p>

  <div class="span6">
    <div id="topic-list">
      <%
      @thread.codes.to_enum.with_index.each do |code,index| %>
        <%= render :partial => "topic_form", :locals => {
            :index => index, :id => code.id, :name => code.code_text , :color => code.color, :description => code.code_description
          } %><%
      end
      %>
    </div>
    <div class="control-group">
      <div class="controls">
        <a id="add_topic" class="btn">Add Another Code/Topic</a>
	<!-- the hidden field stores the number of codes of the thread and provides this data to the javacript that generates more topics. The first field is id and name, the second is the value. To Do: to save the values in threads_controller.rb  in the update method  -->
          <%= hidden_field_tag :topic_count, @thread.codes.length %>
      </div>
    </div>

  <label class="checkbox">
    <!-- <input id="clean_high_areas" type="checkbox">  -->
    <%= check_box_tag "clean_high_areas" %> Keep all highlighted areas that you have done, even the ones from newspapers that are not any more selected, or days that are not longer in this thread
  </label>

  <% if @taxonomies.present? %>
    <h3>Advanced features</h3>
    <p>Use extra taxonomies when classifing areas.</p>

    <% @taxonomies.each do |taxonomy| %>
      <label class="checkbox">
        <%= check_box_tag "taxonomies[]", taxonomy.id, @thread.taxonomy_ids.include?(taxonomy.id) %>
        <strong><%= taxonomy.name %>:</strong>
        <%= taxonomy.taxonomy_options.map(&:value).join(' | ') %>
      </label>
    <% end %>
  <% end %>

  <hr>
  <div class="form-actions control-group">
       <%= f.submit "Update Thread", :class => "btn btn-primary btn-large", id: "start_coding" %>
      <a class="btn btn-large" href="/threads/">Cancel</a>
  </div>
<% end %>

<%= javascript_include_tag "topic_form.js" %>
<%= javascript_include_tag "md5.js" %>
<%= javascript_include_tag "bootstrap-typeahead.js" %>
<%= javascript_include_tag "collaborators.js" %>
<script type="text/javascript">
$(function () {
  $("#media").val($("#org_media").val().split(" "));

  $('.datepicker').datepicker();
/* Commented out because we've switched to only closed (fixed date) threads.
  $("#open_thread").click(function () {
    $("label[for='threadx_end_date']").hide();
    $("#threadx_end_date").hide();
    $("#status").val("opened");
  });

  $("#close_thread").click(function () {
    $("label[for='threadx_end_date']").show();
    $("#threadx_end_date").show();
    $("#status").val("closed");
  });
*/
  // Collaborator list
  var users = <%= raw @users.to_json %>;
  var collaborators = <%= raw @collaborators %>;
  $('#collaborator-input').typeahead({
    source:Object.keys(users)
    , updater:function (item) {
      Collaborators.add(item, users[item]);
      return '';
    }
  });
  for (var i = 0; i < collaborators.length; i++) {
    Collaborators.add(collaborators[i], users[collaborators[i]]);
  };
  $('#collaborator-add').bind('click', function (e) {
    var username = $('#collaborator-input').val();
    $('#collaborator-input').val('');
    if (typeof(users[username]) !== 'undefined') {
      Collaborators.add(username, users[username]);
    }
  });
  $('#collaborator-input').bind('keypress keydown keyup', function (e) {
    var username = $('#collaborator-input').val();
    if (e.keyCode == 13) {
      if (typeof(users[username]) == 'undefined') {
        $('#collaborator-input').val('');
      }
      e.preventDefault();
    }
  });
})
</script>
