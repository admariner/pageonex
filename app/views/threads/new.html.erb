<%= javascript_include_tag "jquery.miniColors.js" %>
<%= stylesheet_link_tag "jquery.miniColors.css" %>

<h1>New Thread</h1>
<hr>
<%= form_for @thread, :url => { :controller => :threads, :action => :create}, :class => "form-horizontal" do |f| %>
  <div id="errors">
    <% if @thread.errors.any? %>
      <div class="alert alert-error">
        <% @thread.errors.full_messages.each do |msg| %>
            <li><%= msg %></li>
        <% end %>
            <li id="date_message" style="display:none">End date must be greater than start date</li>
            <li id="media_message" style="display:none">You must at least select one newspaper</li>
            <li id="topic_name_message" style="display:none">Topic name cannot be empty</li>
            <li id="topic_color_message" style="display:none">Topic color cannot be empty</li>
      </div>
    <% end %>
  </div>
  
	<h2>Basic info</h2><br>
	<%= f.label :thread_display_name, "Thread Name" %>
	<%= f.text_field :thread_display_name, placeholder: "For example Occupy, Arab Spring" %>
  <br>
  <%= f.label :status %>
  <div class="btn-group" data-toggle="buttons-radio">
    <a disabled="disabled" id="open_thread" class="btn btn-primary status" rel="popover"  data-content="In case of selecting this option, this means each day PageOneX, will scrape the latest newspapers front pages related to the thread automatically" data-original-title="Opened Thread" >Opened</a>
    <a id="close_thread" class="btn btn-inverse active status" rel="popover"  data-content="In case of selecting this option, this means the created thread will not be updated and PageOneX will not scrape any newspapers front pages automatically" data-original-title="Closed Thread" >Closed</a>
  </div>
  <%= hidden_field_tag :status,"closed" %>
  <br>
  <div class="date_errors">
  <%= f.label :start_date %>
  <%= f.text_field :start_date, placeholder: "DD/MM/YYYY", :class => "dates js_validate datepicker","rel" => "popover", "data-content"  => "Scraping is done from Kiosko.net, so there is some dates limitations which: available years is [2008, 2009, 2010, 2011, 2012], and most of newspaper issues exist starting from 2010", "data-original-title" => "Limitations of Sources" %>
  </div>


  <div class="date_errors">
  <%= f.label :end_date %>
  <%= f.text_field :end_date, placeholder: "DD/MM/YYYY", :class => "dates js_validate datepicker","rel" => "popover", "data-content"  => "There is limit on the end data in this beta version, which is: the year and the month of end date must be the same as in starting date", "data-original-title" => "End date limitation" %>
  </div>
  


  <%= f.label :category %>
  <%= f.text_field :category, placeholder: "International, national, Occupy" %>


	<%= f.label :description %>
	<%= f.text_area :description, :rows => "10", placeholder: "Few words to describe what going on this thread"%>

	<hr>
	<h2>Newspapers info</h2><br>
	<div id="media_box">
  	<%= label_tag :media, nil, :id => "media_label1" %>
  	<%= select_tag :media, options_from_collection_for_select(@media, "id", "name"),  :multiple => true ,"rel" => "popover", "data-content"  => "To select multiple newspapers: Hold Ctrl + select the newspaper, release the Ctrl with scrolling and hold it again before any other selection", "data-original-title" => "Select Multiple Newspapers" , style: "height: 300px;width: 300px;", :class=>"js_validate" %>
  	<br>

    <%= hidden_field_tag :selected_newspapers, params["media"] %>
  </div>
  <a id="clear_media" class="btn">Clear all choices</a>
  <% #label_tag :media1, nil, :id => "media_label1" %>
  <% #select_tag :media1, options_from_collection_for_select(@media, "id", "name"),  :multiple => true%>

	<!-- <a id="add_media" class="btn">Add Another Newspaper</a> -->
	<% #hidden_field_tag :media_count, 1 %>

	<hr>
	<h2>Coding info</h2><br>

  <div class="well">
    <div id="topic_1" class="well date_errors">
      <div class="topic_name_box">
        <%= label_tag "topic_name_1", nil, :id => "topic_label_1" %>

        <% if params["topic_name_1"] == "" %>
          <%= text_field_tag "topic_name_1",nil,placeholder: "Code/Topic name", :class=>"topic_name js_validate" %> 
        <% else %>
          <%= text_field_tag "topic_name_1",params["topic_name_1"],placeholder: "Code/Topic name", :class=>"topic_name js_validate" %> 
        <% end %>
      </div>
      <div class="topic_color_box">
        <%= label_tag "topic_color_1", nil, :id => "topic_color_label_1" %>

        <% if params["topic_color_1"] == "" %>
          <%= text_field_tag "topic_color_1",nil,placeholder: "#FF0000", :class=>"topic_color js_validate" %> 
        <% else %>
          <%= text_field_tag "topic_color_1",params["topic_color_1"],placeholder: "#FF0000",:class=>"topic_color js_validate" %> 
        <% end %>
      </div>

      <%= label_tag "topic_description_1", nil, :id => "topic_description_label_1" %>

      <% if params["topic_description_1"] == "" %>
        <%= text_area_tag "topic_description_1",nil,:rows => "5",placeholder: "Some Info about that topic" %> 
      <% else %>
        <%= text_area_tag "topic_description_1",params["topic_description_1"],:rows => "5",placeholder: "Some Info about that topic" %> 
      <% end %>
    </div>
    
    
    <br>

    <a style="display:none" id="add_topic" class="btn">Add Another Code/Topic</a>
    <%= hidden_field_tag :topic_count, 1 %>
  </div> 
	
	<div class="form-actions">
		<%= f.submit "Start Coding Â»", :class => "btn btn-primary", id: "strat_coding" %>
		<a class="btn" href="/">Cancel</a>
	</div>
<% end %>

<%= hidden_field_tag :error_counter, "false"  %>

<div id="topic" class="well date_errors"  style="display:none">
      <%= label_tag "topic_name", nil, :id => "topic_name_label" %>
      <%= text_field_tag "topic_name",nil,placeholder: "Code/Topic name" %> 

      <%= label_tag "topic_color", nil, :id => "topic_color_label" %>
      <%= text_field_tag "topic_color",nil,placeholder: "#FF0000" %> 

      <%= label_tag "topic_description", nil, :id => "topic_description_label" %>
      <%= text_area_tag "topic_description",nil,:rows => "5",placeholder: "Some Info about that topic" %> 
</div>

<div class="modal hide" id="scraping">
  <div class="modal-header">
    <h3>Scraping</h3>
  </div>
  <div class="modal-body" style="padding: 54px 0 56px 279px;">
  </div>
  <div class="modal-footer">

  </div>
</div>

<script type="text/javascript">
$(function () {
  $(".topic_color").miniColors({
    change: function (hex,rgb) {
      $(".miniColors-trigger").css("background-color",hex)
      }
    });

  $(".miniColors-trigger").attr("style","margin-bottom:9px;width: 211px;height: 26px;display: block;")
  $('.datepicker').datepicker();
  $('.dates').popover()
  $('.status').popover()
  $('#media').popover()
  $(".field_with_errors").attr("class", "field_with_errors control-group error")
  $("#media").val($("#selected_newspapers").attr("value").split(" "));
  validates()
  // media_count=1
  // media_element = $("#media1");
  // media_label_element = $("#media_label1");
  // $("#add_media").on("click",function () {
  //   cloned_m_e = media_element.clone();
  //   cloned_m_l_e = media_label_element.clone();

  //   cloned_m_l_e.attr("id", "media_label" + ++media_count);
  //   cloned_m_l_e.attr("for", "media" + media_count);
  //   cloned_m_l_e.text("Media"+media_count);

  //   cloned_m_e.attr("id", "media" + media_count);
  //   cloned_m_e.attr("name", "media" + media_count);

  //   $(cloned_m_l_e).insertBefore('#add_media');
  //   $(cloned_m_e).insertBefore('#add_media');
  //   $("<br/>").insertBefore('#add_media');
  //   $("#media_count").attr("value", media_count);
  // });

  topic_count=1
  $("#add_topic").on("click",function () {
    
    var topic_element = $("#topic").clone();
    var topic_name_element = topic_element.find("#topic_name");
    var topic_name_label_element = topic_element.find("#topic_name_label");

    var topic_color_element = topic_element.find("#topic_color");
    var topic_color_label_element = topic_element.find("#topic_color_label");

    var topic_description_element = topic_element.find("#topic_description");
    var topic_description_label_element = topic_element.find("#topic_description_label");

    topic_element.attr("style","display:block");
    topic_element.attr("id","topic"+ ++topic_count);

    topic_name_element.attr("id","topic_name_"+topic_count);
    topic_name_element.attr("name","topic_name_"+topic_count);
    topic_name_label_element.attr("id","topic_name_label_"+topic_count)
    topic_name_label_element.attr("for","topic_name_"+topic_count)
    topic_name_label_element.text("topic_name_"+topic_count)

    topic_color_element.attr("id","topic_color_"+topic_count)
    topic_color_element.attr("name","topic_color_"+topic_count)
    
    random_color = getRandomColor();
    topic_color_element.attr("value","#FEE"+random_color)


    
    topic_color_label_element.attr("id","topic_color_label_"+topic_count)
    topic_color_label_element.attr("for","topic_color_"+topic_count)
    topic_color_label_element.text("topic_color_"+topic_count)

    topic_description_element.attr("id","topic_description_"+topic_count)
    topic_description_element.attr("name","topic_description_"+topic_count)
    topic_description_label_element.attr("id","topic_description_label_"+topic_count)
    topic_description_label_element.attr("for","topic_description_"+topic_count)
    topic_description_label_element.text("topic_description_"+topic_count)

    $(topic_element).insertBefore("#add_topic");
    $("<br/>").insertBefore('#add_topic');
    $("#topic_count").attr("value", topic_count);
  });
  
  

  function getRandomColor () {
    random_color = Math.ceil(Math.random(topic_count)*1000)
    if (random_color >= 100 && random_color != undefined) {
      return random_color;
    } else {
      getRandomColor();
    }
  }

  $("#strat_coding").on("click",function () {
    $('#scraping').modal('show')
    var wait_box = $(".modal-body")
    var opts = {
      lines: 13, // The number of lines to draw
      length: 11, // The length of each line
      width: 4, // The line thickness
      radius: 16, // The radius of the inner circle
      rotate: 0, // The rotation offset
      color: '#000', // #rgb or #rrggbb
      speed: 1.2, // Rounds per second
      trail: 56, // Afterglow percentage
      shadow: true, // Whether to render a shadow
      hwaccel: true, // Whether to use hardware acceleration
      className: 'spinner', // The CSS class to assign to the spinner
      zIndex: 2e9, // The z-index (defaults to 2000000000)
      top: '297', // Top position relative to parent in px
      left: '-67' // Left position relative to parent in px
    };
    var spinner = new Spinner(opts).spin();
    wait_box.append(spinner.el);
  })

  $("#open_thread").click(function () {
    // it's disabled until the feature implemented on the back end
    // $("label[for='threadx_end_date']").hide()
    // $("#threadx_end_date").hide()

  })

  $("#close_thread").click(function () {
    $("label[for='threadx_end_date']").show()
    $("#threadx_end_date").show()
    $("#status").attr("value","closed")
  })

  $("#clear_media").click(function () {
    $("#media").val([]);
  })

  $("#strat_coding").click(function (event) {
    event.preventDefault()
    if ($("#error_counter").attr("value") == "false"){
      $("#new_threadx").submit()
    } else {
      $('#scraping').modal('hide')
      window.scroll()
    }
    
  })
 
  function validates () {
    var errors_box = $("#errors")

    if (errors_box.children().length >= 1) {
      if (mediaValidator()) {
        // errors_box.children().append('<li id="media_message">You must at least select one newspaper</li>')
        $("#errors").find("#media_message").css("display","list-item")
        $("#error_counter").attr("value","true")
      }else{
        $("#errors").find("#media_message").css("display","none")
        $("#media_box").attr("class", "")
        $("#error_counter").attr("value","false")
      }

      if (dateValidator()) {
        $("#errors").find("#date_message").css("display","list-item")
        $("#error_counter").attr("value","true")
        
      }else{
        $("#errors").find("#date_message").css("display","none")
        // $(".date_errors").attr("class", "date_errors")
        $("#error_counter").attr("value","false")
      }

      if (topicNameValidator()) {
        $("#errors").find("#topic_name_message").css("display","list-item")
        $("#error_counter").attr("value","true")
        
      }else{
        $("#errors").find("#topic_name_message").css("display","none")
        $(".topic_name_box").attr("class", "topic_name_box")
        $("#error_counter").attr("value","false")
      }

      if (topicColorValidator()) {
        $("#errors").find("#topic_color_message").css("display","list-item")
        $("#error_counter").attr("value","true")
        
      }else{
        $("#errors").find("#topic_name_message").css("display","none")
        $(".topic_color_box").attr("class", "topic_color_box")
        $("#error_counter").attr("value","false")
      }

      
    };
  } 

  $(".js_validate").change(function () {
    validates()
  })


  function mediaValidator () {
    media_list = $("#media")
    if (media_list.val() == null) {
      $("#media_box").attr("class", "field_with_errors control-group error")
      return true;
    }else{  
      return false;
    }
  }

  function topicNameValidator () {
    if ($(".topic_name").attr("value") == "") {
      $(".topic_name_box").attr("class", "field_with_errors control-group error topic_name_box")
      return true;
    }else{
      return false;
    } 
  }
  
  function topicColorValidator () {
    if ($(".topic_color").attr("value") == "") {
      $(".topic_color_box").attr("class", "field_with_errors control-group error topic_color_box")
      return true;
    }else{
      return false;
    } 
  }

  function dateValidator () {
    // var start_date = new Date($("#threadx_start_date").attr("value"))
    // var end_date = new Date($("#threadx_end_date").attr("value"))
    var s_d = $("#threadx_start_date").attr("value").split('/')
    var e_d = $("#threadx_end_date").attr("value").split('/')

    var start_date = new Date(s_d[2], parseInt(s_d[1])-1, s_d[0])
    var end_date = new Date(e_d[2], parseInt(e_d[1])-1, e_d[0])
    if (start_date > end_date) {
      $(".date_errors").attr("class", "date_errors field_with_errors control-group error")
      return true;
    }else{
      return false;
    }
  }

});
</script>
<script type="text/javascript">
$(function (argument) {
	$(".breadcrumb li").filter("li.active").attr("class"," ");
	$("#initiate").attr("class", "active");

})
</script>

